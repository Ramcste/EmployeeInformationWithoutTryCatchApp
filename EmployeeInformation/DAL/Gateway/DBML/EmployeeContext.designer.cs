#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EmployeeInformaiton.DAL.Gateway.DBML
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="EmployeeDB")]
	public partial class EmployeeContextDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Inserttbl_Designation(tbl_Designation instance);
    partial void Updatetbl_Designation(tbl_Designation instance);
    partial void Deletetbl_Designation(tbl_Designation instance);
    partial void InserttblEmployeeInfo(tblEmployeeInfo instance);
    partial void UpdatetblEmployeeInfo(tblEmployeeInfo instance);
    partial void DeletetblEmployeeInfo(tblEmployeeInfo instance);
    #endregion
		
		public EmployeeContextDataContext() : 
				base(global::EmployeeInformaiton.Properties.Settings.Default.EmployeeDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeContextDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeContextDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeContextDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public EmployeeContextDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tbl_Designation> tbl_Designations
		{
			get
			{
				return this.GetTable<tbl_Designation>();
			}
		}
		
		public System.Data.Linq.Table<tblEmployeeInfo> tblEmployeeInfos
		{
			get
			{
				return this.GetTable<tblEmployeeInfo>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbl_Designation")]
	public partial class tbl_Designation : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Code;
		
		private string _Title;
		
		private EntitySet<tblEmployeeInfo> _tblEmployeeInfos;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnTitleChanging(string value);
    partial void OnTitleChanged();
    #endregion
		
		public tbl_Designation()
		{
			this._tblEmployeeInfos = new EntitySet<tblEmployeeInfo>(new Action<tblEmployeeInfo>(this.attach_tblEmployeeInfos), new Action<tblEmployeeInfo>(this.detach_tblEmployeeInfos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Title", DbType="VarChar(50)")]
		public string Title
		{
			get
			{
				return this._Title;
			}
			set
			{
				if ((this._Title != value))
				{
					this.OnTitleChanging(value);
					this.SendPropertyChanging();
					this._Title = value;
					this.SendPropertyChanged("Title");
					this.OnTitleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Designation_tblEmployeeInfo", Storage="_tblEmployeeInfos", ThisKey="Code", OtherKey="DesignationCode")]
		public EntitySet<tblEmployeeInfo> tblEmployeeInfos
		{
			get
			{
				return this._tblEmployeeInfos;
			}
			set
			{
				this._tblEmployeeInfos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_tblEmployeeInfos(tblEmployeeInfo entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Designation = this;
		}
		
		private void detach_tblEmployeeInfos(tblEmployeeInfo entity)
		{
			this.SendPropertyChanging();
			entity.tbl_Designation = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblEmployeeInfo")]
	public partial class tblEmployeeInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id;
		
		private string _Name;
		
		private string _Email;
		
		private string _Address;
		
		private string _DesignationCode;
		
		private EntityRef<tbl_Designation> _tbl_Designation;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChanging(int value);
    partial void OnIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnDesignationCodeChanging(string value);
    partial void OnDesignationCodeChanged();
    #endregion
		
		public tblEmployeeInfo()
		{
			this._tbl_Designation = default(EntityRef<tbl_Designation>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id
		{
			get
			{
				return this._Id;
			}
			set
			{
				if ((this._Id != value))
				{
					this.OnIdChanging(value);
					this.SendPropertyChanging();
					this._Id = value;
					this.SendPropertyChanged("Id");
					this.OnIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(50)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(50)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DesignationCode", DbType="VarChar(50)")]
		public string DesignationCode
		{
			get
			{
				return this._DesignationCode;
			}
			set
			{
				if ((this._DesignationCode != value))
				{
					if (this._tbl_Designation.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnDesignationCodeChanging(value);
					this.SendPropertyChanging();
					this._DesignationCode = value;
					this.SendPropertyChanged("DesignationCode");
					this.OnDesignationCodeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="tbl_Designation_tblEmployeeInfo", Storage="_tbl_Designation", ThisKey="DesignationCode", OtherKey="Code", IsForeignKey=true)]
		public tbl_Designation tbl_Designation
		{
			get
			{
				return this._tbl_Designation.Entity;
			}
			set
			{
				tbl_Designation previousValue = this._tbl_Designation.Entity;
				if (((previousValue != value) 
							|| (this._tbl_Designation.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._tbl_Designation.Entity = null;
						previousValue.tblEmployeeInfos.Remove(this);
					}
					this._tbl_Designation.Entity = value;
					if ((value != null))
					{
						value.tblEmployeeInfos.Add(this);
						this._DesignationCode = value.Code;
					}
					else
					{
						this._DesignationCode = default(string);
					}
					this.SendPropertyChanged("tbl_Designation");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
